#!/bin/bash
#
# Script to publish a library in case a release commit is discovered
#

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
. "${SCRIPT_DIR}/inc.functions.sh"

# Functions
function is_release_commit() {
  commit_message=$(git log --oneline --format=%B -n 1 ${1} | head -n 1)
  if [[ "${commit_message}" == "release v"* ]]; then
    return 0
  else
    return 1
  fi
}

function contains_snapshot() {
  commit_message=$(git log --oneline --format=%B -n 1 ${1} | head -n 1)
  if [[ "${commit_message}" == *"SNAPSHOT"* ]]; then
    return 0
  else
    return 1
  fi
}

# Let's roll
git_head_commit=$(git rev-parse HEAD)
git_last_merge_commit=$(git log -1 --format=%H --merges)

if [[ ${git_head_commit} == "${git_last_merge_commit}" ]]; then
  # HEAD is a merge commit, check commits on merged branch for a release commit by
  # finding common ancestor and by iterating all commits from that branch
  git_branch_parent_commits=($(git log -1 --merges --pretty=format:%P))
  git_branch_merge_base_commit=$(git merge-base --all ${git_branch_parent_commits[0]} ${git_branch_parent_commits[1]})

  for commit in $(git log --pretty=%H ${git_branch_merge_base_commit}..${git_branch_parent_commits[1]}); do
    if is_release_commit "${commit}"; then
      approve "Release commit found in branch at ${commit}, publishing..."
      # Checkout release commit and build exactly that...
      safe git checkout "${commit}"
      # Ensure we have perms
      safe chmod +x ./gradlew
      safe ./gradlew graphqlGenerateClient
      if contains_snapshot "${commit}"; then
        approve "Snapshot release, publishing to snapshot repo..."
        safe ./gradlew publishAllPublicationsToMavenCentralRepository
      else
        approve "Release release, publishing to central repo..."
        safe ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
      fi
      safe git checkout "${git_head_commit}"
      exit 0
    fi
  done
elif is_release_commit "${git_head_commit}"; then
  approve "Release commit found at HEAD (${git_head_commit}), publishing..."
  safe chmod +x ./gradlew
  safe ./gradlew graphqlGenerateClient
  if contains_snapshot "${git_head_commit}"; then
    approve "Snapshot release, publishing to snapshot repo..."
    safe ./gradlew publishAllPublicationsToMavenCentralRepository
  else
    approve "Release release, publishing to central repo..."
    safe ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
  fi
  exit 0
fi

warn "No release commit, skipping..."